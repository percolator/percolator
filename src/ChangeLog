v3.05
* Fixed problem with Elude model reading on windows (#249)
* Better error messages for converters (#251)
* Fixed several build errors (#188, #250)
* Parallel nested CV SVM training using a single OMP threadpool, Percolator can now handle up to 27 parallel threads to significantly speed up processing and uses parallel STL algorithms on linux (#254)
* Fix TabReader error handling (#255)
* Continuous integration with GitHub Actions with nightly releases for Windows, OSX and Ubuntu (https://github.com/percolator/percolator/actions)

v3.04
* Added full support for static models (#247)

v3.03
* Added check for inf or nan valued features (#177)
* Added option to add expMass to PSMid in converters (#232)
* Added check for protein length < decoy prefix length in picked protein (#242)
* Added support for N- and C-term modifications formatted as M.n[37]A[16]AERc[16].G
* Fixes for DOC feature option
* Fixed tandem2pin incorrect decoy label bug (#238)
* Fixed tandem2pin duplicate entries for shared peptides
* Fixed CMake XSD package detection (#234)
* Fixed quickvalidation issue with resetting of score vector (#235)
* Fixed rounding error for experimental mass in msgf2pin (#223)
* Added missing #include for <ctime> (#225)
* Fixed duplicate peptide identifications in protein output (#222)
* Added OSX vagrant build
* Updated XercesC version

v3.02.1
* Fixed protein digestion issues due to trypsin/p (#191)
* Skip XSD schema loading when -s flag is set

v3.02
* Changed FDR calculation for initial direction selection to the more liberal decoys/targets (#208)
* Added parameter file option instead of only command line specification (#149)
* Allow training only on best PSM per peak group or spectrum (#207)
* Include spectral counts for lists of protein inferences (#202)
* Allow separate control of FDR threshold for initial iteration (#190)
* Added check of deltaMass and retentionTime columns with DOC features (#167)
* Added check if output files are writable before training SVM (#185)
* Fixed tandem BioML input check for tandem2pin (#180)
* Fixed discrepancy between windows and linux results (#203)
* Fixed fido protein grouping (#201)
* Fixed zlib DLL issue on windows (#197)
* Fixed/clarified several log and help messages (#199, #205, #179)

v3.01.2
* Fixed empty output on xxx2pin converters on MacOS (#178).

v3.01.1
* Fixed macOS installer problems with macOS 10.11+ (#193)

v3.01
* Changed all FDR calculations to the more conservative: (decoys+1)/targets
* Added `-o`/`-no-terminate` flag to allow overriding of fatal errors:
  * No default direction can be found: set to the first feature (#135)
  * Separation between target and decoy PSMs/proteins is too great: continue with this direction anyway
  * No target PSMs present: return empty result list
  * No decoy PSMs present: give all target PSMs a q-value of 1/numPSMs
  * No features present: create a single pseudo feature which is always zero
  * Too many values in default direction vector: trim default direction vector to number of features
* Added mix-max method for FDR and PEP calculation, which replaces target-decoy competition as the default method. The advantage is that this will report all input PSMs in the PSM output and also corrects for incorrect native spectra in qvality (#152)
* Automatic detection of search input as coming from a concatenated search or from separate target and decoy searches. For a concatenated search, the mix-max method will be skipped. For separate target and decoy searches the user can choose to use the mix-max method (default) or target-decoy competition (-Y flag)
* Updated and improved stderr output to be more informative
* Fixed fasta in-silico digestion for protein grouping which mistook N-methionine cleavage for a non-enzymatic cleavage site (#148)
* Fixed retention time NaN predictions by setting them to 0 instead (#150)
* Fixed protein group representation for picked-protein in the case that protein names contain a comma, by replacing these by semicolons (#153)
* Fixed tandem2pin issue that labeled all PSMs as decoy when providing separate target and decoy input files (#154)
* Added OpenMP runtime library to be included in windows installer (#158)
* Fixed msgf2pin converter issue with C-terminal modifications (#161)
* Fixed tandem2pin to parse PTMs (#132)
* Fixed install location on windows 64-bit from "Program Files (x86)" to "Program Files" (#144)
* Several fixes for OSX build script (#159, #162, #165)
* Fixed mass difference calculation in certain converters (#166)
* Fixed several build issues on several platforms (#79, #113, #133)

v3.0
* Added protein-level FDRs using best-scoring peptide approach
* Added support for training on subsets of PSMs to speed up analysis for large data sets
* Fixed msgf2pin issue with huge ScoreRatio feature (#142)
* Fixed tandem2pin issue with incorrect decoy label assigment for shared peptides (#143)
* Added error message when no decoys are provided (#145)
* Fixed reporting of XML parsing errors for converters (#146)

v2.10
* Made Target-Decoy competition the default search mode (can be switched off with the new '-y' flag)
* Fixed unbalanced fold sizes in cross validation
* Fixed build script for Elude on Windows (#106)
* Fixed enzC feature in the presence of a modification on the C terminal (#118)
* Resolved duplicate `-W` flag (#124)
* Fixed issue with Target-Decoy competition (#128)
* Added support for modifications of the form `P[mod_string]EPT` of sqt input file for sqt2pin (#131)
* Simplified the Fido interface for protein inference
  * Removed options to turn off optimizations that did not alter the posteriors
  * Proteins are always grouped if they have identical evidence and get a protein group number in the protein tab delimited output
  
v2.09
* Added CentOS building script, tested on a clean install of CentOS5.9 (#98, #99)
* Added support for reading from stdin using an empty hyphen argument (#107)
* Added error message when running converters without arguments (#108)
* Fixed invalid pin output from converters with `--aa-freq` parameter (#110)
* Added exp_mass and calc_mass to the tab delimited pin format, so that it appears in the xml output (#112)
* Fixed backwards compatibility with old MSGF+ output (#115)
* Fixed sqt2pin issue of skipping second modification if there are two consecutive PTMs (#116)
* Added OpenMP support for a maximum of 3 cores (1 for each of the cross validation bins). 
  * runs about 2 times as fast, instead of the theoretical 3 (#119).
  * memory usage is slightly higher (<5%) than the single core implementation, since some structures had to be triplicated
  * the number of cores can be set to 1 dynamically by setting the environment variables
  ```
  export OMP_DYNAMIC=FALSE
  export OMP_NUM_THREADS=1
  ```
  
v2.08.01
* Changed behaviour of `-r` and `-B` (=peptide result file names for target and decoy) flags in combination with `-U` (=only PSM statistics) flag. The provided file names will now contain the PSM results, provided that the new `-m` and `-M` (=PSM result file names for target and decoy) flags are not given. This will allow backwards compatibility with percolator 2.04.

v2.08
* Added flags for writing results to explicit filenames instead of using suffixes (#104):
```
-r : target peptide results (is ignored with -U flag)
-m : target PSM results
-l : target protein result (only works with -A flag)

-B : decoy peptide result (is ignored with -U flag)
-M : decoy PSM result
-L : decoy protein result (only works with -A flag)
```
* Restored redundant `-j` flag for tab delimited input for backwards compatibility (i.e. running percolator as `percolator -j tab_output` does not result in errors, but functionally does exactly the same as `percolator tab_output`) (#103)
* Added backwards compatibility with tab delimited input format of percolator before v2.06 by allowing the scan number column to be missing (scan numbers will be assigned automatically). (#102)
* Added more specific error reporting for problems with tab delimited input format. (#95, #96, #97)
* Added default vector for tandem2pin converter (#94)
* Added a fix for the RPM `/usr/bin` permission error in the fedora build script (#90)
* Added a fix for Ubuntu 14.04 problem with XSD package (#100)

v2.07.02
* Fixed wrong xml directory reference in msgf2pin and tandem2pin on windows
* Added warning message to converters if files are not present

v2.07.01
* Removed lnESpecValue column (rel 2.07 only removed the header and default value).
* Fixed numFeatures assertion error.

v2.07
* Fixed missing PTMs bug in MSGF+ converter 
* Removed `InSpecEValue` from MSGF+ converter, since it was causing problems when used together with `lnEValue`
* Added functionality to score directly with provided default vector by setting number of iterations to zero (use flag `-i=0`)
* Fixed percolator output with `-r` flag
* Switched to static linking of external libraries

v2.06
* Modified the xxx2pin converters to output tab delimited files 
  by default rather than pin xml-files  
* Improved support for tab-delimited files, including fixed
  columns for scan numbers, and fixed rows for default directions
* Changed command line option for selecting default direction (-V)
  to take feature name rather than feature number as input
* Introduced a cmake flag XML_SUPPORT, governing the inclusion or 
  exclusion of percolators pin-file XML dependencies. 
* Native Windows compilation via Visual C++
	
v2.05
* Added support for MSGF+ files, using the parser msgf2pin
* Enabled windows 64-bit executables through MinGW64
	
v2.04
* Incorporated new version of Fido to estimate Protein Probabilities
* Added new parameters to use when estimating Protein Probabilities :
	-a (--alpha) 
	-b (--beta)
	-G (--gamma)
  	-N (--group-proteins)
        -D (--no-prune-proteins)
        -P (--deepness)
* Added information to the pout file:
	Number of PSMs, peptides and Proteins below at FDR 1%.
	Pi0s calculated at PSM, peptide and protein level.
	alpha,beta and gamma values for fido.
* Corrected an error in the selection process of the highest
  scoring PSM for each peptide.

v2.03

v2.02
* Added new xml binary serialization schemes in Sqt2pin. It now supports LevelDB + XDR and Boost Serialization + Hash tables.
* Added three new parameters in percolator, "exp-mass",  "empirical-protein-q" and "protein-level-pi0".
* Added output of PEP by default in percolator.
* Bugfix: fixed sqt2pin to accept extra characters in the peptides of the input files.
* Remove some external dependencies and/or libraries.
* Added support to APPLE systems.
* Added support to WINDOWS system through cross-compilation under MINGW.
* Bugfix: Compilation error of sqt2pin in some platforms.
* Removed warnings in the building process.
* Added cross compilation compatibility with Ubuntu-Debian systems (MinGW).
* Improved the building and compilation process.
* Added parameter -M to activate the exp_mass in the ouput of percolator.
* Bugfix: Execution error while creating temporal directories in sqt2pin fixed.
* Created a patch for XSD binaries libraries in MAC.
* Created a patch for XDR serialization in Windows.
* Added an adapted version for percolator of LevelDB and TokyoCabinet libraries.
* Generated packages for MAC,Ubuntu and Fedora systems.
* Generated installer of percolator,elude and sqt2pin for windows systems.
* Added GUI for installers in Windows. Included icons, language options as well as many add-ons.
* Improved the compatibility and robustness of the code.

v2.01
* Bugfix: corrected PSM level statistics for cases when percolator executed w/o -U flag

v2.00
* Added Fido code to infer proteins and calculate protein level assignments (experimental feature)
* Changed the naming scheme for PTMs from *#@ notation to UNIMOD notation. 
* Added a option for Lys-N Processing capability
* Removed bug in sqt2pin that hindered combination of multiple sqt-files using meta-files
* Separation of the code so that we have separate source packages for percolator, its converters, and elude.
* Removed bug in the sqt2pin processing that hindered large file data processing
* Added option in qvality for handling generalized decoys (experimental feature) 

v1.17
* Bugfix for cases where the same peptide occurres both among the target and decoy PSMs

v1.16
* Elude handles both non-modified and posttranslationally modified peptides
* Validation of Percolator's input against local copy of xml schema
* Bugfix for Sqt2pin when invoked with -2 option

v1.15
* New XML input format ("pin") and revised output format ("pout") for percolator.
  Schemas are available in src/xml.
* Unique peptide level q-values are reported alongside PSM level q-values.
* All PSMs from the same fragmentation spectrum end up in the the same cross 
  validation bin
* Output of observed mass for PSMs rather than fragmentation spectrum, to aid
  the processing of FT-ICR data.

v1.14
* Added a weed out redundant PSMs and just keep unique peptides option (-U)
* Trimming the logistic regression conversion chriteria. Also itroduced correct 
weighting during rougness penalty estimation. Both edits will have influence on
  the PEP calculations.
* New sqt format reade for S lines, checking for 9 or 10 fields and if computername set or not
* Added code dealing with in-source CID fragmentation in RT prediction.

v1.13
* Filtering out redundant peptides before retention time regression training
* Bugfix for retention time feature calculation
* Introduced a percolator -r and qvality -o option to redirect stdout to file
  (important in the windows environment).
* Updated percolator xml scheme to include decoy PSMs id -Z switch set

v1.12
* Changed licensing scheme for percolator
* PNGase F feature (option -N) introduced

v1.11
* Bugfix for qvality binning procedure
* Introduced a sqrt(abs(dM)*abs(dRT)) feature for the Description of correct

v1.10
* Changed merging procedure of cross validation sets sio that the
  scores so that the decoy score between the first
  and 10th percentile becomes uniform (rather than first and third
  quantile as previously)
* Added independent train and test set for determining the gamma and C
  parameters in the retention time calculation.
* Corrected a binning procedure bug, who's symptom has been a
  "bad_alloc()" error statement.

v1.09
* Removed bug in the normalization of retention times when using tab
  delimited input.
* Introduced a range limit in the iterative least square procedure used
  in the Posterior Error Probability calculations.
v 1.08
* Retention time and callibration calculations are now available from
  tab delimited files as well.
* Output xml-files according to the definitions in
  http://noble.gs.washington.edu/proj/percolator/model/percolator_out.xsd

v 1.07
* Command line switch to output decoy scores (-B)
* Switch for replacing retention time features with the Klammer et al. features.

v 1.06
* Retention time calculation
* Added features for differenceto mean - retention time, pI and calibration
* Changed cross validation strategy so that only one target and one decoy set should be given as input.
